name: CI

on:
  pull_request:
  push:
    branches:
      - develop

env:
  PORT: ${{ secrets.PORT }}
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  DATABASE_TEST_URL: ${{ secrets.DATABASE_TEST_URL }}
  NODE_ENV: test
  DATABASE_URL_PRO: ${{ secrets.DATABASE_URL_PRO }}
  API_KEY: ${{ secrets.API_KEY }}
  API_SECRET: ${{ secrets.API_SECRET }}
  CLOUD_NAME: ${{ secrets.CLOUD_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm install

      - run: npm ci

      - name: Set NODE_ENV to test
        run: echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Log Environment Variables
        run: |
          echo "PORT=$PORT"
          echo "DATABASE_TEST_URL=$DATABASE_TEST_URL"
          echo "NODE_ENV=$NODE_ENV"
          echo "CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY"
          echo "CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET"
          echo "CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME"

      - name: Run Database Migrations
        run: npm run migrate  # Ensure this script exists and runs migrations

      - run: npm run build --if-present

      - run: npm test --if-present

      - run: npm run coverage --if-present

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
