{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "E-commerce-ninjas",
    "description": "APIs for the E-commmerce-ninjas  Project",
    "termsOfService": "https://github.com/atlp-rwanda/e-commerce-ninjas-bn/blob/develop/README.md",
    "contact": {
      "email": "e-commerce-ninjas@andela.com"
    },
    "license": {
      "name": "ISC"
    }
  },
  "host-live": "localhost:5000",
  "host": "https://e-commerce-ninjas-bn.onrender.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Initial Route",
      "description": "Initial/Fake Endpoint | GET Route"
    },
    {
      "name": "Authentication Routes",
      "description": "Authentication Endpoint | POST Route"
    },
    {
      "name": "Admin User Routes",
      "description": "Change User Status Endpoint | PUT Route"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "none"
  ],
  "produces": [
    "application/json",
    "none"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Initial Route"
        ],
        "summary": "Handle Initial / Wrong GET Route",
        "description": "By using the initial/wrong GET endpoint, you will see a welcome message (Welcome to E-Commerce-Ninja-BackEnd)",
        "responses": {
          "200": {
            "description": "Success. (Welcome to E-Commerce-Ninja-BackEnd.)"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Register a new user",
        "description": "This endpoint allows for registering a new user by providing the required details.",
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer"
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/send-verify-email": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Resend verification email again",
        "description": "This endpoint allows user to request verification email again",
        "requestBody": {
          "description": "Sending email for verification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-email/{token}": {
      "get": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Verify user email",
        "description": "This endpoint allows user to verify their email",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "description": "parsing token"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Login User",
        "description": "Login a registered user by providing Email and Password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "yourpassword"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials / Bad request"
          }
        }
      }
    },
    "/api/users/admin-update-user-status/{id}": {
      "put": {
        "tags": [
          "Admin User Routes"
        ],
        "summary": "Change User Status",
        "description": "This endpoint allows an admin to change User account Status by providing the userId.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to change status",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Change user status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "Status updated successfully.",
                    "value": {
                      "message": "Status updated successfully."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "User Not Found",
                    "value": {
                      "success": false,
                      "message": "User doesn't exist."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "Invalid user ID",
                    "value": {
                      "message": "Invalid user ID"
                    }
                  }
                }
              }
            }
          }
        }
      },
    "500": {
      "description": "Internal server error",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "examples": {
            "serverError": {
              "summary": "Server Error",
              "value": {
                "message": "Server error"
              }
            }
          }
        }
      }
    }
    },
    "/api/auth/logout": {
        "post": {
          "tags": [
            "Authentication Routes"
          ],
          "summary": "Logout User",
          "description": "Logout a logged in user",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Logout successful"
            },
            "401": {
              "description": "No Token provided"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "integer",
              "nullable": true
            },
            "profilePicture": {
              "type": "string",
              "format": "uri"
            },
            "gender": {
              "type": "string",
              "enum": [
                "male",
                "female"
              ],
              "nullable": true
            },
            "birthDate": {
              "type": "string",
              "format": "date",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "currency": {
              "type": "string",
              "nullable": true
            },
            "role": {
              "type": "string",
              "nullable": true
            },
            "isVerified": {
              "type": "boolean"
            },
            "is2FAEnabled": {
              "type": "boolean"
            },
            "status": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    }
  }
}