{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "E-commerce-ninjas",
    "description": "APIs for the E-commerce-ninjas Project",
    "termsOfService": "https://github.com/atlp-rwanda/e-commerce-ninjas-bn/blob/develop/README.md",
    "contact": {
      "email": "e-commerce-ninjas@andela.com"
    },
    "license": {
      "name": "ISC"
    }
  },
  "host": "localhost:5000",
  "host-live": "https://e-commerce-ninjas-platform-backend.onrender.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Initial Route",
      "description": "Initial/Fake Endpoint | GET Route"
    },
    {
      "name": "Authentication Routes",
      "description": "Authentication Endpoint | POST Route"
    },
    {
      "name": "Admin Routes",
      "description": "Admmin Endpoint"
    },
    {
      "name": "User Routes",
      "description": "User Endpoint"
    },
    {
      "name": "Seller Routes",
      "description": "Seller Endpoint"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "nullable": true
          },
          "profilePicture": {
            "type": "string",
            "format": "uri"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "isVerified": {
            "type": "boolean"
          },
          "is2FAEnabled": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Products": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "shopId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "discount": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "expiryDate": {
            "type": "date"
          },
          "expired": {
            "type": "boolean"
          },
          "bonus": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Initial Route"
        ],
        "summary": "Handle Initial / Wrong GET Route",
        "description": "By using the initial/wrong GET endpoint, you will see a welcome message (Welcome to E-Commerce-Ninja-BackEnd)",
        "responses": {
          "200": {
            "description": "Success. (Welcome to E-Commerce-Ninja-BackEnd.)"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Register a new user",
        "description": "This endpoint allows for registering a new user by providing the required details.",
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/send-verify-email": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Resend verification email again",
        "description": "This endpoint allows user to request verification email again",
        "requestBody": {
          "description": "Sending email for verification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-email/{token}": {
      "get": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Verify user email",
        "description": "This endpoint allows user to verify their email",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "description": "parsing token"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Login User",
        "description": "Login a registered user by providing Email and Password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "yourpassword"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials / Bad request"
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Login User via Google",
        "description": "This route should redirect the user to Google for verification. [Login Via Google](https://e-commerce-ninjas-platform-backend.onrender.com/api/auth/google)",
        "responses": {
          "302": {
            "description": "Redirect to Google for authentication"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Logout User",
        "description": "Logout a logged in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "No Token provided"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/user-get-profile": {
      "get": {
        "tags": [
          "User Routes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": " get user profile",
        "description": "This endpoint allows user get  his/her data.",
        "responses": {
          "200": {
            "description": "Get  user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "user get data",
                    "value": {
                      "message": "user get data"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "User Not Found",
                    "value": {
                      "error": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "serverError": {
                    "summary": "Internal Server Error",
                    "value": {
                      "message": "Internal Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/user-update-profile": {
      "put": {
        "tags": [
          "User Routes"
        ],
        "summary": "Update a User Profile",
        "description": "User should be able to update his/her profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "firstName",
                    "in": "formData"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "lastName",
                    "in": "formData"
                  },
                  "phone": {
                    "type": "number",
                    "description": "Phone number",
                    "in": "formData"
                  },
                  "profilePicture": {
                    "type": "string",
                    "description": "Profile picture",
                    "in": "formData",
                    "format": "binary"
                  },
                  "gender": {
                    "type": "string",
                    "description": "Gender",
                    "in": "formData"
                  },
                  "birthDate": {
                    "type": "string",
                    "description": "Birth date",
                    "in": "formData"
                  },
                  "language": {
                    "type": "string",
                    "description": "language",
                    "in": "formData"
                  },
                  "currency": {
                    "type": "string",
                    "description": "currency",
                    "in": "formData"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/admin-get-users": {
      "get": {
        "tags": [
          "Admin Routes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "admin get all users",
        "description": "This endpoint allows an admin get all users.",
        "responses": {
          "200": {
            "description": "Get all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "admin get all users",
                    "value": {
                      "message": "admin get all users"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No users found in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "No users found in the database.",
                    "value": {
                      "error": "No users found in the database."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "serverError": {
                    "summary": " Internal server error",
                    "value": {
                      "error": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/admin-get-user/{id}": {
      "get": {
        "tags": [
          "Admin Routes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "admin get users",
        "description": "This endpoint allows an admin get users.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "parsing id"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "admin get user",
                    "value": {
                      "message": "admin get user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "User Not Found",
                    "value": {
                      "error": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "serverError": {
                    "summary": "Internal Server Error",
                    "value": {
                      "message": "Internal Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/admin-update-user-status/{id}": {
      "put": {
        "tags": [
          "Admin Routes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Change User Status",
        "description": "This endpoint allows an admin to change User account Status by providing the userId.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to change status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Change user status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "Status updated successfully.",
                    "value": {
                      "message": "Status updated successfully."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User doesn't exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "User Not Found",
                    "value": {
                      "message": "User doesn't exist."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "Invalid user ID",
                    "value": {
                      "message": "Invalid user ID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "serverError": {
                    "summary": "Server Error",
                    "value": {
                      "message": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/admin-update-role/{id}": {
      "put": {
        "tags": [
          "Admin Routes"
        ],
        "summary": "Update user role",
        "description": "This endpoint allows admin to update a user's role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Pass the ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User role update details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "Admin",
                      "Buyer",
                      "Seller"
                    ]
                  }
                },
                "required": [
                  "role"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/seller-create-shop": {
      "post": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "A seller should be able to Create new shop",
        "description": "This endpoint allows seller to create new shop",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Shop created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "sellerId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Shop not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/seller-create-product": {
      "post": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "A seller should be able to Create/Add a product with shop Id",
        "description": "This endpoint allows seller to create/add a product with shop Id",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of product images"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the product"
                  },
                  "price": {
                    "type": "number",
                    "description": "Price of the product"
                  },
                  "bonus": {
                    "type": "integer",
                    "description": "bonus of the product"
                  },
                  "discount": {
                    "type": "string",
                    "description": "discount of the product"
                  },
                  "category": {
                    "type": "string",
                    "description": "category of the product"
                  },
                  "expiryDate": {
                    "type": "string",
                    "description": "expiry date of the product"
                  },
                  "quantity": {
                    "type": "number",
                    "description": "quantity of the product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "shopId": {
                          "type": "string"
                        },
                        "sellerId": {
                          "type": "string"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "bonus": {
                          "type": "integer"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "expiryDate": {
                          "type": "date"
                        },
                        "quantity": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Collection not found or Product already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/seller-delete-product/{id}": {
      "delete": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "Delete Item",
        "description": "Deletes a specific item from a seller's shop.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the shop to which the product belongs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Item deleted successfully"
                    }
                  },
                  "401": {
                    "description": "Unauthorized access (missing or invalid token)"
                  },
                  "403": {
                    "description": "Forbidden access (non-seller user trying to delete)"
                  },
                  "404": {
                    "description": "Item not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            " message": {
                              "type": "string",
                              "description": "Error message",
                              "example": "Item not found"
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Bad request (e.g., missing or invalid itemId)"
                  },
                  "500": {
                    "description": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forget-password": {
      "post": {
        "tags": [
          "Authentication Routes"
        ],
        "summary": "Request password reset",
        "description": "This endpoint allows a user to request a password reset link by providing their email address.",
        "requestBody": {
          "description": "Email address to request password reset",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password/{token}": {
      "post": {
        "summary": "Reset password",
        "description": "Resets the user's password using the provided token and new password.",
        "tags": [
          "Authentication Routes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "Token received in the password reset email",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "New password details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "The new password"
                  }
                },
                "required": [
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "Expired token or internal server error"
          }
        }
      }
    },
    "/api/user/change-password": {
      "put": {
        "summary": "User update password",
        "description": "Updates the password for a user with the specified ID.",
        "tags": [
          "User Routes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "Old password of the user"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New password of the user. It must be at least 8 characters long and contain both letters and numbers."
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Confirmation of the new password. It must match the new password."
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword",
                  "confirmPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Bad request. Invalid input or passwords do not match."
          },
          "401": {
            "description": "Unauthorized. Old password is incorrect."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/shop/seller-statistics": {
      "post": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "Seller Statistics",
        "description": "View Seller's revenue, orders and best selling products in specific timeframe.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-01-01"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-12-31"
                  }
                },
                "required": [
                  "startDate",
                  "endDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Seller Statistics"
          },
          "400": {
            "description": "Invalid dates"
          },
          "401": {
            "description": "Not logged in"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/api/shop/seller-update-product-status/{id}": {
      "put": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "A seller should be able to update product status manually",
        "description": "This endpoint allows a seller to update the availability status of a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Product availability updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/seller-get-products": {
      "get": {
        "tags": [
          "Seller Routes"
        ],
        "summary": "A seller should be able to get all products",
        "description": "This endpoint allows a seller to get all products",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All products fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not shop found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/user-get-products": {
      "get": {
        "tags": [
          "User Routes"
        ],
        "summary": "A buyer should be able to view products",
        "description": "This endpoint allow a buyer to view all products available",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Fashion"
            },
            "description": "Products by category"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}