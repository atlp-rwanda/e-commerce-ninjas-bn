{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "E-commerce-ninjas",
    "description": "APIs for the E-commerce-ninjas Project",
    "termsOfService": "https://github.com/atlp-rwanda/e-commerce-ninjas-bn/blob/develop/README.md",
    "contact": {
      "email": "e-commerce-ninjas@andela.com"
    },
    "license": {
      "name": "ISC"
    }
  },
  "host-live": "localhost:5000",
  "host": "https://e-commerce-ninjas-bn.onrender.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Initial Route",
      "description": "Initial/Fake Endpoint | GET Route"
    },
    {
      "name": "Register Route",
      "description": "Registration for user | POST Route"
    },
    {
      "name": "Password Route",
      "description": "Password reset functionality | POST and GET Routes"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "none"
  ],
  "produces": [
    "application/json",
    "none"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Initial Route"
        ],
        "summary": "Handle Initial / Wrong GET Route",
        "description": "By the use of initial/wrong GET endpoint, you will be able to see welcome message (Welcome to E-Commerce-Ninja-BackEnd)",
        "responses": {
          "200": {
            "description": "Success. (Welcome to E-Commerce-Ninja-BackEnd.)"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Register Route"
        ],
        "summary": "Register a new user",
        "description": "This endpoint allows for registering a new user by providing the required details.",
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/update-password": {
      "post": {
        "tags": [
          "Password Route"
        ],
        "summary": "Update user password",
        "description": "This endpoint allows a user to update their password by providing their old password, new password, and confirmation of the new password.",
        "requestBody": {
          "description": "Password update details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },


    "/api/auth/forgot-password": {
      "post": {
        "tags": [
          "Password Route"
        ],
        "summary": "Request password reset",
        "description": "This endpoint allows a user to request a password reset by providing their email address.",
        "requestBody": {
          "description": "Email address to request password reset",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password/{token}": {
      "get": {
        "tags": [
          "Password Route"
        ],
        "summary": "Verify password reset token",
        "description": "This endpoint verifies the password reset token sent to the user's email.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password reset token"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "Password Route"
        ],
        "summary": "Reset user password",
        "description": "This endpoint allows a user to reset their password by providing a valid token and new password.",
        "requestBody": {
          "description": "New password details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["token", "password"]
            }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {        
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "integer"
          },
          "profilePicture": {
            "type": "string",
            "format": "uri"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"]
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "language": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          },
          "oldPassword": {
            "type": "string",
            "format": "password"
          },
          "newPassword": {
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["userId", "oldPassword", "newPassword","confirmPassword"]
      }
    }
  }
}
